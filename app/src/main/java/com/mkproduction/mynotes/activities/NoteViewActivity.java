package com.mkproduction.mynotes.activities;import android.annotation.SuppressLint;import android.os.Bundle;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import android.widget.ToggleButton;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.lifecycle.ViewModelProvider;import com.mkproduction.mynotes.R;import com.mkproduction.mynotes.pojo.Note;import com.mkproduction.mynotes.roomdatabase.NoteViewModel;import java.util.Date;import java.util.Objects;public class NoteViewActivity extends AppCompatActivity {    private EditText mNoteTitleEditText;    private EditText mNoteDataEditText;    private NoteViewModel noteViewModel;    private ToggleButton mFavouriteNoteToggleButton;    private Button mShareNoteButton;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_note_view);        findViews();        Objects.requireNonNull(getSupportActionBar()).setDisplayHomeAsUpEnabled(true);        noteViewModel = new ViewModelProvider(this).get(NoteViewModel.class);        // changing action bar title        Bundle bundle = getIntent().getExtras();        Log.d("note Status value ", "" + bundle.get("noteStatus"));        if (bundle.get("noteStatus").equals("newNote"))            Objects.requireNonNull(getSupportActionBar()).setTitle("Add a new note");        else {            Objects.requireNonNull(getSupportActionBar()).setTitle("Edit note");            noteViewModel.getNoteByID(bundle.getInt("noteID")).observe(this, note1 -> {                mNoteTitleEditText.setText(note1.getNoteTitle());                mNoteDataEditText.setText(note1.getNoteData());                mFavouriteNoteToggleButton.setChecked(note1.getNoteIsFavourite() == 'y');            });        }        mFavouriteNoteToggleButton.setOnClickListener(view -> mFavouriteNoteToggleButton.setChecked(mFavouriteNoteToggleButton.isChecked()));        mShareNoteButton.setOnClickListener(view -> Toast.makeText(this, "This feature is available for premium users only", Toast.LENGTH_SHORT).show());    }    private void findViews() {        mNoteTitleEditText = findViewById(R.id.note_activity_note_title_edittext);        mNoteDataEditText = findViewById(R.id.note_activity_note_data_edittext);        mShareNoteButton = findViewById(R.id.note_activity_share_note_button);        mFavouriteNoteToggleButton = findViewById(R.id.note_activity_favourite_note_toggle_button);    }    @Override    public boolean onCreateOptionsMenu(@NonNull Menu menu) {        getMenuInflater().inflate(R.menu.note_activity_action_bar_menu_resource, menu);        return super.onCreateOptionsMenu(menu);    }    @SuppressLint("NonConstantResourceId")    @Override    public boolean onOptionsItemSelected(@NonNull MenuItem item) {        Bundle bundle = getIntent().getExtras();        switch (item.getItemId()) {            case R.id.note_view_activity_menu_save_item:                if (!mNoteTitleEditText.getText().toString().trim().isEmpty()) {                    Note note = new Note();                    note.setID(bundle.getInt("noteID"));                    note.setNoteTitle(mNoteTitleEditText.getText().toString());                    note.setNoteData((!mNoteDataEditText.getText().toString().isEmpty()) ? mNoteDataEditText.getText().toString().trim() : "");                    note.setNoteAddedDate(new Date(System.currentTimeMillis()).toString());                    note.setIsFavourite((mFavouriteNoteToggleButton.isChecked()) ? 'y' : 'n');                    if (bundle.get("noteStatus").equals("newNote"))                        noteViewModel.insertNote(note);                    else {                        noteViewModel.updateNote(note);//                        noteViewModel.notifyAll();                    }                    finish();                    Toast.makeText(this, "Note saved successfully", Toast.LENGTH_SHORT).show();                } else                    Toast.makeText(this, "At least fill up note title", Toast.LENGTH_SHORT).show();                break;            case android.R.id.home:                this.finish();                break;        }        return super.onOptionsItemSelected(item);    }}